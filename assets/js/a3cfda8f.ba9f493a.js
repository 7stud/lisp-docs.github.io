"use strict";(self.webpackChunklisp_docs_github_io=self.webpackChunklisp_docs_github_io||[]).push([[9778],{6048:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var s=n(5893),o=n(1151);const i={title:"Glossary Improved!",authors:"daniel",tags:["status","beginning","glossary"]},l=void 0,r={permalink:"/blog/2023/12/07/",editUrl:"https://github.com/lisp-docs/lisp-docs.github.io/blog/2023-12-07.md",source:"@site/blog/2023-12-07.md",title:"Glossary Improved!",description:"Glossary Improved",date:"2023-12-07T00:00:00.000Z",formattedDate:"December 7, 2023",tags:[{label:"status",permalink:"/blog/tags/status"},{label:"beginning",permalink:"/blog/tags/beginning"},{label:"glossary",permalink:"/blog/tags/glossary"}],readingTime:.21,hasTruncateMarker:!1,authors:[{name:"Daniel N",title:"Lisp Docs Contributor",url:"https://github.com/daninus14",key:"daniel"}],frontMatter:{title:"Glossary Improved!",authors:"daniel",tags:["status","beginning","glossary"]},unlisted:!1,prevItem:{title:"Code Blocks Indented",permalink:"/blog/2023/12/07/code-indented"},nextItem:{title:"Alpha Version 1.0 is Out!",permalink:"/blog/2023/12/06/"}},a={authorsImageUrls:[void 0]},d=[{value:"Glossary Improved",id:"glossary-improved",level:2}];function c(e){const t={h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"glossary-improved",children:"Glossary Improved"}),"\n",(0,s.jsx)(t.p,{children:"The glossary has now:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Been split into multiple pages, one per letter"}),"\n",(0,s.jsx)(t.li,{children:"The legend and introduction have their page"}),"\n",(0,s.jsx)(t.li,{children:"A lot of the text was fixed for formatting issues, this was the bulk of the work"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>l});var s=n(7294);const o={},i=s.createContext(o);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);